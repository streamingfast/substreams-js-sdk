// @generated by protoc-gen-es v2.3.0 with parameter "target=ts"
// @generated from file sf/substreams/v1/package.proto (package sf.substreams.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any, FileDescriptorProto } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";
import type { Modules } from "./modules_pb";
import { file_sf_substreams_v1_modules } from "./modules_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sf/substreams/v1/package.proto.
 */
export const file_sf_substreams_v1_package: GenFile = /*@__PURE__*/
  fileDesc("Ch5zZi9zdWJzdHJlYW1zL3YxL3BhY2thZ2UucHJvdG8SEHNmLnN1YnN0cmVhbXMudjEi3QQKB1BhY2thZ2USOQoLcHJvdG9fZmlsZXMYASADKAsyJC5nb29nbGUucHJvdG9idWYuRmlsZURlc2NyaXB0b3JQcm90bxIPCgd2ZXJzaW9uGAUgASgEEioKB21vZHVsZXMYBiABKAsyGS5zZi5zdWJzdHJlYW1zLnYxLk1vZHVsZXMSNQoLbW9kdWxlX21ldGEYByADKAsyIC5zZi5zdWJzdHJlYW1zLnYxLk1vZHVsZU1ldGFkYXRhEjcKDHBhY2thZ2VfbWV0YRgIIAMoCzIhLnNmLnN1YnN0cmVhbXMudjEuUGFja2FnZU1ldGFkYXRhEg8KB25ldHdvcmsYCSABKAkSKQoLc2lua19jb25maWcYCiABKAsyFC5nb29nbGUucHJvdG9idWYuQW55EhMKC3NpbmtfbW9kdWxlGAsgASgJEg0KBWltYWdlGAwgASgMEjkKCG5ldHdvcmtzGA0gAygLMicuc2Yuc3Vic3RyZWFtcy52MS5QYWNrYWdlLk5ldHdvcmtzRW50cnkSQgoNYmxvY2tfZmlsdGVycxgOIAMoCzIrLnNmLnN1YnN0cmVhbXMudjEuUGFja2FnZS5CbG9ja0ZpbHRlcnNFbnRyeRpQCg1OZXR3b3Jrc0VudHJ5EgsKA2tleRgBIAEoCRIuCgV2YWx1ZRgCIAEoCzIfLnNmLnN1YnN0cmVhbXMudjEuTmV0d29ya1BhcmFtczoCOAEaMwoRQmxvY2tGaWx0ZXJzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4AUoECAIQBSL8AQoNTmV0d29ya1BhcmFtcxJJCg1pbml0aWFsQmxvY2tzGAEgAygLMjIuc2Yuc3Vic3RyZWFtcy52MS5OZXR3b3JrUGFyYW1zLkluaXRpYWxCbG9ja3NFbnRyeRI7CgZwYXJhbXMYAiADKAsyKy5zZi5zdWJzdHJlYW1zLnYxLk5ldHdvcmtQYXJhbXMuUGFyYW1zRW50cnkaNAoSSW5pdGlhbEJsb2Nrc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoBDoCOAEaLQoLUGFyYW1zRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJfCg9QYWNrYWdlTWV0YWRhdGESDwoHdmVyc2lvbhgBIAEoCRILCgN1cmwYAiABKAkSDAoEbmFtZRgDIAEoCRILCgNkb2MYBCABKAkSEwoLZGVzY3JpcHRpb24YBSABKAkiNAoOTW9kdWxlTWV0YWRhdGESFQoNcGFja2FnZV9pbmRleBgBIAEoBBILCgNkb2MYAiABKAlCRlpEZ2l0aHViLmNvbS9zdHJlYW1pbmdmYXN0L3N1YnN0cmVhbXMvcGIvc2Yvc3Vic3RyZWFtcy92MTtwYnN1YnN0cmVhbXNiBnByb3RvMw", [file_google_protobuf_any, file_google_protobuf_descriptor, file_sf_substreams_v1_modules]);

/**
 * @generated from message sf.substreams.v1.Package
 */
export type Package = Message<"sf.substreams.v1.Package"> & {
  /**
   * Needs to be one so this file can be used _directly_ as a
   * buf `Image` andor a ProtoSet for grpcurl and other tools
   *
   * @generated from field: repeated google.protobuf.FileDescriptorProto proto_files = 1;
   */
  protoFiles: FileDescriptorProto[];

  /**
   * @generated from field: uint64 version = 5;
   */
  version: bigint;

  /**
   * @generated from field: sf.substreams.v1.Modules modules = 6;
   */
  modules?: Modules;

  /**
   * @generated from field: repeated sf.substreams.v1.ModuleMetadata module_meta = 7;
   */
  moduleMeta: ModuleMetadata[];

  /**
   * @generated from field: repeated sf.substreams.v1.PackageMetadata package_meta = 8;
   */
  packageMeta: PackageMetadata[];

  /**
   * Source network for Substreams to fetch its data from.
   *
   * @generated from field: string network = 9;
   */
  network: string;

  /**
   * @generated from field: google.protobuf.Any sink_config = 10;
   */
  sinkConfig?: Any;

  /**
   * @generated from field: string sink_module = 11;
   */
  sinkModule: string;

  /**
   * image is the bytes to a JPEG, WebP or PNG file. Max size is 2 MiB
   *
   * @generated from field: bytes image = 12;
   */
  image: Uint8Array;

  /**
   * @generated from field: map<string, sf.substreams.v1.NetworkParams> networks = 13;
   */
  networks: { [key: string]: NetworkParams };

  /**
   * @generated from field: map<string, string> block_filters = 14;
   */
  blockFilters: { [key: string]: string };
};

/**
 * Describes the message sf.substreams.v1.Package.
 * Use `create(PackageSchema)` to create a new message.
 */
export const PackageSchema: GenMessage<Package> = /*@__PURE__*/
  messageDesc(file_sf_substreams_v1_package, 0);

/**
 * @generated from message sf.substreams.v1.NetworkParams
 */
export type NetworkParams = Message<"sf.substreams.v1.NetworkParams"> & {
  /**
   * @generated from field: map<string, uint64> initialBlocks = 1;
   */
  initialBlocks: { [key: string]: bigint };

  /**
   * @generated from field: map<string, string> params = 2;
   */
  params: { [key: string]: string };
};

/**
 * Describes the message sf.substreams.v1.NetworkParams.
 * Use `create(NetworkParamsSchema)` to create a new message.
 */
export const NetworkParamsSchema: GenMessage<NetworkParams> = /*@__PURE__*/
  messageDesc(file_sf_substreams_v1_package, 1);

/**
 * @generated from message sf.substreams.v1.PackageMetadata
 */
export type PackageMetadata = Message<"sf.substreams.v1.PackageMetadata"> & {
  /**
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * @generated from field: string url = 2;
   */
  url: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string doc = 4;
   */
  doc: string;

  /**
   * @generated from field: string description = 5;
   */
  description: string;
};

/**
 * Describes the message sf.substreams.v1.PackageMetadata.
 * Use `create(PackageMetadataSchema)` to create a new message.
 */
export const PackageMetadataSchema: GenMessage<PackageMetadata> = /*@__PURE__*/
  messageDesc(file_sf_substreams_v1_package, 2);

/**
 * @generated from message sf.substreams.v1.ModuleMetadata
 */
export type ModuleMetadata = Message<"sf.substreams.v1.ModuleMetadata"> & {
  /**
   * Corresponds to the index in `Package.metadata.package_meta`
   *
   * @generated from field: uint64 package_index = 1;
   */
  packageIndex: bigint;

  /**
   * @generated from field: string doc = 2;
   */
  doc: string;
};

/**
 * Describes the message sf.substreams.v1.ModuleMetadata.
 * Use `create(ModuleMetadataSchema)` to create a new message.
 */
export const ModuleMetadataSchema: GenMessage<ModuleMetadata> = /*@__PURE__*/
  messageDesc(file_sf_substreams_v1_package, 3);

