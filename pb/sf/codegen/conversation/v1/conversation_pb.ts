// @generated by protoc-gen-es v2.3.0 with parameter "target=ts"
// @generated from file sf/codegen/conversation/v1/conversation.proto (package sf.codegen.conversation.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sf/codegen/conversation/v1/conversation.proto.
 */
export const file_sf_codegen_conversation_v1_conversation: GenFile = /*@__PURE__*/
  fileDesc("Ci1zZi9jb2RlZ2VuL2NvbnZlcnNhdGlvbi92MS9jb252ZXJzYXRpb24ucHJvdG8SGnNmLmNvZGVnZW4uY29udmVyc2F0aW9uLnYxIgcKBUVtcHR5Iu8HCglVc2VySW5wdXQSDgoGbXNnX2lkGAEgASgNEhMKC2Zyb21fbXNnX2lkGAIgASgNEhYKDmZyb21fYWN0aW9uX2lkGAMgASgJEjwKBXN0YXJ0GAsgASgLMisuc2YuY29kZWdlbi5jb252ZXJzYXRpb24udjEuVXNlcklucHV0LlN0YXJ0SAASRQoKdGV4dF9pbnB1dBgPIAEoCzIvLnNmLmNvZGVnZW4uY29udmVyc2F0aW9uLnYxLlVzZXJJbnB1dC5UZXh0SW5wdXRIABJECglzZWxlY3Rpb24YESABKAsyLy5zZi5jb2RlZ2VuLmNvbnZlcnNhdGlvbi52MS5Vc2VySW5wdXQuU2VsZWN0aW9uSAASSgoMY29uZmlybWF0aW9uGBIgASgLMjIuc2YuY29kZWdlbi5jb252ZXJzYXRpb24udjEuVXNlcklucHV0LkNvbmZpcm1hdGlvbkgAEjwKBGZpbGUYECABKAsyLC5zZi5jb2RlZ2VuLmNvbnZlcnNhdGlvbi52MS5Vc2VySW5wdXQuVXBsb2FkSAASUQoQZG93bmxvYWRlZF9maWxlcxgUIAEoCzI1LnNmLmNvZGVnZW4uY29udmVyc2F0aW9uLnYxLlVzZXJJbnB1dC5Eb3dubG9hZGVkRmlsZXNIABJFCgpsb2NhbF9maWxlGBUgASgLMi8uc2YuY29kZWdlbi5jb252ZXJzYXRpb24udjEuVXNlcklucHV0LkxvY2FsRmlsZUgAGhoKCVRleHRJbnB1dBINCgV2YWx1ZRgBIAEoCRoaCglMb2NhbEZpbGUSDQoFdmFsdWUYASABKAwabgoFU3RhcnQSFAoMZ2VuZXJhdG9yX2lkGAEgASgJEj4KB2h5ZHJhdGUYAiABKAsyLS5zZi5jb2RlZ2VuLmNvbnZlcnNhdGlvbi52MS5Vc2VySW5wdXQuSHlkcmF0ZRIPCgd2ZXJzaW9uGAMgASgNGmIKB0h5ZHJhdGUSEwoLc2F2ZWRfc3RhdGUYASABKAkSEQoJc2lnbmF0dXJlGAIgASgMEhMKC2xhc3RfbXNnX2lkGAMgASgNEhoKEnJlc2V0X2NvbnZlcnNhdGlvbhgEIAEoCBo+CgZVcGxvYWQSEQoJbWltZV90eXBlGAEgASgJEhAKCGZpbGVuYW1lGAIgASgJEg8KB2NvbnRlbnQYAyABKAwaKQoJU2VsZWN0aW9uEg0KBWxhYmVsGAEgASgJEg0KBXZhbHVlGAIgASgJGiMKDENvbmZpcm1hdGlvbhITCgthZmZpcm1hdGl2ZRgBIAEoCBoRCg9Eb3dubG9hZGVkRmlsZXNCBwoFZW50cnkinA8KDFN5c3RlbU91dHB1dBIOCgZtc2dfaWQYASABKA0SEwoLZnJvbV9tc2dfaWQYAiABKA0SEQoJYWN0aW9uX2lkGAMgASgJEg0KBXN0YXRlGAQgASgJEhcKD3N0YXRlX3NpZ25hdHVyZRgFIAEoDBJDCgdtZXNzYWdlGA8gASgLMjAuc2YuY29kZWdlbi5jb252ZXJzYXRpb24udjEuU3lzdGVtT3V0cHV0Lk1lc3NhZ2VIABJRCg9pbWFnZV93aXRoX3RleHQYECABKAsyNi5zZi5jb2RlZ2VuLmNvbnZlcnNhdGlvbi52MS5TeXN0ZW1PdXRwdXQuSW1hZ2VXaXRoVGV4dEgAEkoKC2xpc3Rfc2VsZWN0GBEgASgLMjMuc2YuY29kZWdlbi5jb252ZXJzYXRpb24udjEuU3lzdGVtT3V0cHV0Lkxpc3RTZWxlY3RIABJICgp0ZXh0X2lucHV0GBIgASgLMjIuc2YuY29kZWdlbi5jb252ZXJzYXRpb24udjEuU3lzdGVtT3V0cHV0LlRleHRJbnB1dEgAEkMKB2NvbmZpcm0YFSABKAsyMC5zZi5jb2RlZ2VuLmNvbnZlcnNhdGlvbi52MS5TeXN0ZW1PdXRwdXQuQ29uZmlybUgAEkMKB2xvYWRpbmcYEyABKAsyMC5zZi5jb2RlZ2VuLmNvbnZlcnNhdGlvbi52MS5TeXN0ZW1PdXRwdXQuTG9hZGluZ0gAElAKDmRvd25sb2FkX2ZpbGVzGBQgASgLMjYuc2YuY29kZWdlbi5jb252ZXJzYXRpb24udjEuU3lzdGVtT3V0cHV0LkRvd25sb2FkRmlsZXNIABJICgpsb2NhbF9maWxlGBYgASgLMjIuc2YuY29kZWdlbi5jb252ZXJzYXRpb24udjEuU3lzdGVtT3V0cHV0LkxvY2FsRmlsZUgAGioKB01lc3NhZ2USEAoIbWFya2Rvd24YASABKAkSDQoFc3R5bGUYAiABKAkaMgoNSW1hZ2VXaXRoVGV4dBIPCgdpbWdfdXJsGAEgASgJEhAKCG1hcmtkb3duGAIgASgJGqkCCgpMaXN0U2VsZWN0EgoKAmlkGAEgASgJEg4KBmxhYmVscxgCIAMoCRIOCgZ2YWx1ZXMYAyADKAkSEgoKaW1hZ2VfdXJscxgEIAMoCRIUCgxpbnN0cnVjdGlvbnMYBiABKAkSEwoLc2VsZWN0X21hbnkYCCABKAgSUwoLc2VsZWN0X3R5cGUYByABKA4yPi5zZi5jb2RlZ2VuLmNvbnZlcnNhdGlvbi52MS5TeXN0ZW1PdXRwdXQuTGlzdFNlbGVjdC5TZWxlY3RUeXBlEhsKE3NlbGVjdF9idXR0b25fbGFiZWwYBSABKAkSFQoNZGVmYXVsdF92YWx1ZRgJIAEoCSInCgpTZWxlY3RUeXBlEgwKCERST1BET1dOEAASCwoHQlVUVE9OUxABGuYBCglUZXh0SW5wdXQSDgoGcHJvbXB0GAggASgJEhMKC2Rlc2NyaXB0aW9uGAEgASgJEhMKC3BsYWNlaG9sZGVyGAIgASgJEhUKDWRlZmF1bHRfdmFsdWUYCSABKAkSEgoKbXVsdGlfbGluZRgDIAEoBRIZChF2YWxpZGF0aW9uX3JlZ2V4cBgEIAEoCRIgChh2YWxpZGF0aW9uX2Vycm9yX21lc3NhZ2UYBSABKAkSGwoTc3VibWl0X2J1dHRvbl9sYWJlbBgGIAEoCRIaChJzdWJtaXRfYnV0dG9uX2ljb24YByABKAkalQEKCUxvY2FsRmlsZRIOCgZwcm9tcHQYCCABKAkSEwoLZGVzY3JpcHRpb24YASABKAkSEwoLcGxhY2Vob2xkZXIYAiABKAkSFQoNZGVmYXVsdF92YWx1ZRgJIAEoCRIbChNzdWJtaXRfYnV0dG9uX2xhYmVsGAYgASgJEhoKEnN1Ym1pdF9idXR0b25faWNvbhgHIAEoCRopCgdMb2FkaW5nEg8KB2xvYWRpbmcYASABKAgSDQoFbGFiZWwYAiABKAkaVQoNRG93bmxvYWRGaWxlcxJECgVmaWxlcxgBIAMoCzI1LnNmLmNvZGVnZW4uY29udmVyc2F0aW9uLnYxLlN5c3RlbU91dHB1dC5Eb3dubG9hZEZpbGUaVAoMRG93bmxvYWRGaWxlEhAKCGZpbGVuYW1lGAEgASgJEgwKBHR5cGUYAiABKAkSDwoHY29udGVudBgDIAEoDBITCgtkZXNjcmlwdGlvbhgEIAEoCRrpAQoHQ29uZmlybRIOCgZwcm9tcHQYASABKAkSEwoLZGVzY3JpcHRpb24YBCABKAkSGwoTYWNjZXB0X2J1dHRvbl9sYWJlbBgCIAEoCRIcChRkZWNsaW5lX2J1dHRvbl9sYWJlbBgDIAEoCRJPCg5kZWZhdWx0X2J1dHRvbhgFIAEoDjI3LnNmLmNvZGVnZW4uY29udmVyc2F0aW9uLnYxLlN5c3RlbU91dHB1dC5Db25maXJtLkJ1dHRvbiItCgZCdXR0b24SCQoFVU5TRVQQABILCgdDT05GSVJNEAESCwoHREVDTElORRACQgcKBWVudHJ5IkAKEERpc2NvdmVyeVJlcXVlc3QSFAoMc2VhcmNoX3Rlcm1zGAEgASgJEhYKDmNsaWVudF92ZXJzaW9uGAIgASgEItABChFEaXNjb3ZlcnlSZXNwb25zZRJLCgpnZW5lcmF0b3JzGAEgAygLMjcuc2YuY29kZWdlbi5jb252ZXJzYXRpb24udjEuRGlzY292ZXJ5UmVzcG9uc2UuR2VuZXJhdG9yGm4KCUdlbmVyYXRvchIKCgJpZBgBIAEoCRINCgV0aXRsZRgCIAEoCRITCgtkZXNjcmlwdGlvbhgDIAEoCRIQCghpY29uX3VybBgEIAEoCRIQCghlbmRwb2ludBgFIAEoCRINCgVncm91cBgGIAEoCTLfAQoTQ29udmVyc2F0aW9uU2VydmljZRJfCghDb252ZXJzZRIlLnNmLmNvZGVnZW4uY29udmVyc2F0aW9uLnYxLlVzZXJJbnB1dBooLnNmLmNvZGVnZW4uY29udmVyc2F0aW9uLnYxLlN5c3RlbU91dHB1dCgBMAESZwoIRGlzY292ZXISLC5zZi5jb2RlZ2VuLmNvbnZlcnNhdGlvbi52MS5EaXNjb3ZlcnlSZXF1ZXN0Gi0uc2YuY29kZWdlbi5jb252ZXJzYXRpb24udjEuRGlzY292ZXJ5UmVzcG9uc2VCJlokc2YvY29kZWdlbi9jb252ZXJzYXRpb247Y29udmVyc2F0aW9uYgZwcm90bzM");

/**
 * @generated from message sf.codegen.conversation.v1.Empty
 */
export type Empty = Message<"sf.codegen.conversation.v1.Empty"> & {
};

/**
 * Describes the message sf.codegen.conversation.v1.Empty.
 * Use `create(EmptySchema)` to create a new message.
 */
export const EmptySchema: GenMessage<Empty> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 0);

/**
 * @generated from message sf.codegen.conversation.v1.UserInput
 */
export type UserInput = Message<"sf.codegen.conversation.v1.UserInput"> & {
  /**
   * Monotonic incrementing number
   *
   * @generated from field: uint32 msg_id = 1;
   */
  msgId: number;

  /**
   * @generated from field: uint32 from_msg_id = 2;
   */
  fromMsgId: number;

  /**
   * @generated from field: string from_action_id = 3;
   */
  fromActionId: string;

  /**
   * @generated from oneof sf.codegen.conversation.v1.UserInput.entry
   */
  entry: {
    /**
     * @generated from field: sf.codegen.conversation.v1.UserInput.Start start = 11;
     */
    value: UserInput_Start;
    case: "start";
  } | {
    /**
     * @generated from field: sf.codegen.conversation.v1.UserInput.TextInput text_input = 15;
     */
    value: UserInput_TextInput;
    case: "textInput";
  } | {
    /**
     * @generated from field: sf.codegen.conversation.v1.UserInput.Selection selection = 17;
     */
    value: UserInput_Selection;
    case: "selection";
  } | {
    /**
     * @generated from field: sf.codegen.conversation.v1.UserInput.Confirmation confirmation = 18;
     */
    value: UserInput_Confirmation;
    case: "confirmation";
  } | {
    /**
     * @generated from field: sf.codegen.conversation.v1.UserInput.Upload file = 16;
     */
    value: UserInput_Upload;
    case: "file";
  } | {
    /**
     * Deprecated: we don't use this.
     *
     * @generated from field: sf.codegen.conversation.v1.UserInput.DownloadedFiles downloaded_files = 20;
     */
    value: UserInput_DownloadedFiles;
    case: "downloadedFiles";
  } | {
    /**
     * @generated from field: sf.codegen.conversation.v1.UserInput.LocalFile local_file = 21;
     */
    value: UserInput_LocalFile;
    case: "localFile";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message sf.codegen.conversation.v1.UserInput.
 * Use `create(UserInputSchema)` to create a new message.
 */
export const UserInputSchema: GenMessage<UserInput> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 1);

/**
 * @generated from message sf.codegen.conversation.v1.UserInput.TextInput
 */
export type UserInput_TextInput = Message<"sf.codegen.conversation.v1.UserInput.TextInput"> & {
  /**
   * @generated from field: string value = 1;
   */
  value: string;
};

/**
 * Describes the message sf.codegen.conversation.v1.UserInput.TextInput.
 * Use `create(UserInput_TextInputSchema)` to create a new message.
 */
export const UserInput_TextInputSchema: GenMessage<UserInput_TextInput> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 1, 0);

/**
 * @generated from message sf.codegen.conversation.v1.UserInput.LocalFile
 */
export type UserInput_LocalFile = Message<"sf.codegen.conversation.v1.UserInput.LocalFile"> & {
  /**
   * @generated from field: bytes value = 1;
   */
  value: Uint8Array;
};

/**
 * Describes the message sf.codegen.conversation.v1.UserInput.LocalFile.
 * Use `create(UserInput_LocalFileSchema)` to create a new message.
 */
export const UserInput_LocalFileSchema: GenMessage<UserInput_LocalFile> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 1, 1);

/**
 * @generated from message sf.codegen.conversation.v1.UserInput.Start
 */
export type UserInput_Start = Message<"sf.codegen.conversation.v1.UserInput.Start"> & {
  /**
   * generator_id routes the conversation to the right generator backend
   *
   * @generated from field: string generator_id = 1;
   */
  generatorId: string;

  /**
   * Hydrate will be present when the user already has a pre-built state, and wants to continue from there.
   *
   * @generated from field: sf.codegen.conversation.v1.UserInput.Hydrate hydrate = 2;
   */
  hydrate?: UserInput_Hydrate;

  /**
   * Version of the supported protocol by the client.
   * If the code generator requires a more recent client, then it should also report an error, or try to downgrade the conversation protocol.
   *
   * @generated from field: uint32 version = 3;
   */
  version: number;
};

/**
 * Describes the message sf.codegen.conversation.v1.UserInput.Start.
 * Use `create(UserInput_StartSchema)` to create a new message.
 */
export const UserInput_StartSchema: GenMessage<UserInput_Start> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 1, 2);

/**
 * @generated from message sf.codegen.conversation.v1.UserInput.Hydrate
 */
export type UserInput_Hydrate = Message<"sf.codegen.conversation.v1.UserInput.Hydrate"> & {
  /**
   * If `saved_payload` is none, then just start a new session.
   *
   * JSON state from a previous session, to continue where we left off.
   *
   * @generated from field: string saved_state = 1;
   */
  savedState: string;

  /**
   * HMAC sig from the server for the saved_payload. Optional.
   *
   * @generated from field: bytes signature = 2;
   */
  signature: Uint8Array;

  /**
   * whatever
   *
   * @generated from field: uint32 last_msg_id = 3;
   */
  lastMsgId: number;

  /**
   * Whether to continue, or to reset the conversation. If this is `false`, it means try to continue (the connection was merely disconnected). Otherwise, it means we're starting anew. Let's give all the options and directions.
   *
   * @generated from field: bool reset_conversation = 4;
   */
  resetConversation: boolean;
};

/**
 * Describes the message sf.codegen.conversation.v1.UserInput.Hydrate.
 * Use `create(UserInput_HydrateSchema)` to create a new message.
 */
export const UserInput_HydrateSchema: GenMessage<UserInput_Hydrate> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 1, 3);

/**
 * @generated from message sf.codegen.conversation.v1.UserInput.Upload
 */
export type UserInput_Upload = Message<"sf.codegen.conversation.v1.UserInput.Upload"> & {
  /**
   * @generated from field: string mime_type = 1;
   */
  mimeType: string;

  /**
   * @generated from field: string filename = 2;
   */
  filename: string;

  /**
   * @generated from field: bytes content = 3;
   */
  content: Uint8Array;
};

/**
 * Describes the message sf.codegen.conversation.v1.UserInput.Upload.
 * Use `create(UserInput_UploadSchema)` to create a new message.
 */
export const UserInput_UploadSchema: GenMessage<UserInput_Upload> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 1, 4);

/**
 * @generated from message sf.codegen.conversation.v1.UserInput.Selection
 */
export type UserInput_Selection = Message<"sf.codegen.conversation.v1.UserInput.Selection"> & {
  /**
   * @generated from field: string label = 1;
   */
  label: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message sf.codegen.conversation.v1.UserInput.Selection.
 * Use `create(UserInput_SelectionSchema)` to create a new message.
 */
export const UserInput_SelectionSchema: GenMessage<UserInput_Selection> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 1, 5);

/**
 * @generated from message sf.codegen.conversation.v1.UserInput.Confirmation
 */
export type UserInput_Confirmation = Message<"sf.codegen.conversation.v1.UserInput.Confirmation"> & {
  /**
   * @generated from field: bool affirmative = 1;
   */
  affirmative: boolean;
};

/**
 * Describes the message sf.codegen.conversation.v1.UserInput.Confirmation.
 * Use `create(UserInput_ConfirmationSchema)` to create a new message.
 */
export const UserInput_ConfirmationSchema: GenMessage<UserInput_Confirmation> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 1, 6);

/**
 * Deprecated: this isn't used
 *
 * This is only to return a message to the server that the files were downloaded
 *
 * @generated from message sf.codegen.conversation.v1.UserInput.DownloadedFiles
 */
export type UserInput_DownloadedFiles = Message<"sf.codegen.conversation.v1.UserInput.DownloadedFiles"> & {
};

/**
 * Describes the message sf.codegen.conversation.v1.UserInput.DownloadedFiles.
 * Use `create(UserInput_DownloadedFilesSchema)` to create a new message.
 */
export const UserInput_DownloadedFilesSchema: GenMessage<UserInput_DownloadedFiles> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 1, 7);

/**
 * @generated from message sf.codegen.conversation.v1.SystemOutput
 */
export type SystemOutput = Message<"sf.codegen.conversation.v1.SystemOutput"> & {
  /**
   * unique message ID
   *
   * @generated from field: uint32 msg_id = 1;
   */
  msgId: number;

  /**
   * @generated from field: uint32 from_msg_id = 2;
   */
  fromMsgId: number;

  /**
   * the type of action that is required here, tags like "confirm_final" or "select_subgraph" or "select_network", so the UI can hook into the response the user will take here.
   *
   * @generated from field: string action_id = 3;
   */
  actionId: string;

  /**
   * to be saved each step, if connection drops, Init back with this state
   *
   * @generated from field: string state = 4;
   */
  state: string;

  /**
   * Optional, or future ?
   *
   * @generated from field: bytes state_signature = 5;
   */
  stateSignature: Uint8Array;

  /**
   * @generated from oneof sf.codegen.conversation.v1.SystemOutput.entry
   */
  entry: {
    /**
     * Markdown message to display
     *
     * @generated from field: sf.codegen.conversation.v1.SystemOutput.Message message = 15;
     */
    value: SystemOutput_Message;
    case: "message";
  } | {
    /**
     * @generated from field: sf.codegen.conversation.v1.SystemOutput.ImageWithText image_with_text = 16;
     */
    value: SystemOutput_ImageWithText;
    case: "imageWithText";
  } | {
    /**
     * @generated from field: sf.codegen.conversation.v1.SystemOutput.ListSelect list_select = 17;
     */
    value: SystemOutput_ListSelect;
    case: "listSelect";
  } | {
    /**
     * @generated from field: sf.codegen.conversation.v1.SystemOutput.TextInput text_input = 18;
     */
    value: SystemOutput_TextInput;
    case: "textInput";
  } | {
    /**
     * @generated from field: sf.codegen.conversation.v1.SystemOutput.Confirm confirm = 21;
     */
    value: SystemOutput_Confirm;
    case: "confirm";
  } | {
    /**
     * @generated from field: sf.codegen.conversation.v1.SystemOutput.Loading loading = 19;
     */
    value: SystemOutput_Loading;
    case: "loading";
  } | {
    /**
     * @generated from field: sf.codegen.conversation.v1.SystemOutput.DownloadFiles download_files = 20;
     */
    value: SystemOutput_DownloadFiles;
    case: "downloadFiles";
  } | {
    /**
     * @generated from field: sf.codegen.conversation.v1.SystemOutput.LocalFile local_file = 22;
     */
    value: SystemOutput_LocalFile;
    case: "localFile";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message sf.codegen.conversation.v1.SystemOutput.
 * Use `create(SystemOutputSchema)` to create a new message.
 */
export const SystemOutputSchema: GenMessage<SystemOutput> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 2);

/**
 * @generated from message sf.codegen.conversation.v1.SystemOutput.Message
 */
export type SystemOutput_Message = Message<"sf.codegen.conversation.v1.SystemOutput.Message"> & {
  /**
   * @generated from field: string markdown = 1;
   */
  markdown: string;

  /**
   * @generated from field: string style = 2;
   */
  style: string;
};

/**
 * Describes the message sf.codegen.conversation.v1.SystemOutput.Message.
 * Use `create(SystemOutput_MessageSchema)` to create a new message.
 */
export const SystemOutput_MessageSchema: GenMessage<SystemOutput_Message> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 2, 0);

/**
 * @generated from message sf.codegen.conversation.v1.SystemOutput.ImageWithText
 */
export type SystemOutput_ImageWithText = Message<"sf.codegen.conversation.v1.SystemOutput.ImageWithText"> & {
  /**
   * @generated from field: string img_url = 1;
   */
  imgUrl: string;

  /**
   * @generated from field: string markdown = 2;
   */
  markdown: string;
};

/**
 * Describes the message sf.codegen.conversation.v1.SystemOutput.ImageWithText.
 * Use `create(SystemOutput_ImageWithTextSchema)` to create a new message.
 */
export const SystemOutput_ImageWithTextSchema: GenMessage<SystemOutput_ImageWithText> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 2, 1);

/**
 * @generated from message sf.codegen.conversation.v1.SystemOutput.ListSelect
 */
export type SystemOutput_ListSelect = Message<"sf.codegen.conversation.v1.SystemOutput.ListSelect"> & {
  /**
   * Deprecated: use `action_id` instead
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * These need to be the same length
   *
   * @generated from field: repeated string labels = 2;
   */
  labels: string[];

  /**
   * @generated from field: repeated string values = 3;
   */
  values: string[];

  /**
   * Optional. If present, same length as the labels and values. Shows a small icon aside of the label text.
   *
   * @generated from field: repeated string image_urls = 4;
   */
  imageUrls: string[];

  /**
   * In Markdown format
   *
   * @generated from field: string instructions = 6;
   */
  instructions: string;

  /**
   * @generated from field: bool select_many = 8;
   */
  selectMany: boolean;

  /**
   * @generated from field: sf.codegen.conversation.v1.SystemOutput.ListSelect.SelectType select_type = 7;
   */
  selectType: SystemOutput_ListSelect_SelectType;

  /**
   * @generated from field: string select_button_label = 5;
   */
  selectButtonLabel: string;

  /**
   * @generated from field: string default_value = 9;
   */
  defaultValue: string;
};

/**
 * Describes the message sf.codegen.conversation.v1.SystemOutput.ListSelect.
 * Use `create(SystemOutput_ListSelectSchema)` to create a new message.
 */
export const SystemOutput_ListSelectSchema: GenMessage<SystemOutput_ListSelect> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 2, 2);

/**
 * @generated from enum sf.codegen.conversation.v1.SystemOutput.ListSelect.SelectType
 */
export enum SystemOutput_ListSelect_SelectType {
  /**
   * @generated from enum value: DROPDOWN = 0;
   */
  DROPDOWN = 0,

  /**
   * @generated from enum value: BUTTONS = 1;
   */
  BUTTONS = 1,
}

/**
 * Describes the enum sf.codegen.conversation.v1.SystemOutput.ListSelect.SelectType.
 */
export const SystemOutput_ListSelect_SelectTypeSchema: GenEnum<SystemOutput_ListSelect_SelectType> = /*@__PURE__*/
  enumDesc(file_sf_codegen_conversation_v1_conversation, 2, 2, 0);

/**
 * @generated from message sf.codegen.conversation.v1.SystemOutput.TextInput
 */
export type SystemOutput_TextInput = Message<"sf.codegen.conversation.v1.SystemOutput.TextInput"> & {
  /**
   * @generated from field: string prompt = 8;
   */
  prompt: string;

  /**
   * Markdown
   *
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * @generated from field: string placeholder = 2;
   */
  placeholder: string;

  /**
   * Pre-filled the textbox
   *
   * @generated from field: string default_value = 9;
   */
  defaultValue: string;

  /**
   * Number of lines if multiline box.
   *
   * @generated from field: int32 multi_line = 3;
   */
  multiLine: number;

  /**
   * @generated from field: string validation_regexp = 4;
   */
  validationRegexp: string;

  /**
   * @generated from field: string validation_error_message = 5;
   */
  validationErrorMessage: string;

  /**
   * @generated from field: string submit_button_label = 6;
   */
  submitButtonLabel: string;

  /**
   * icon name or image_url
   *
   * @generated from field: string submit_button_icon = 7;
   */
  submitButtonIcon: string;
};

/**
 * Describes the message sf.codegen.conversation.v1.SystemOutput.TextInput.
 * Use `create(SystemOutput_TextInputSchema)` to create a new message.
 */
export const SystemOutput_TextInputSchema: GenMessage<SystemOutput_TextInput> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 2, 3);

/**
 * @generated from message sf.codegen.conversation.v1.SystemOutput.LocalFile
 */
export type SystemOutput_LocalFile = Message<"sf.codegen.conversation.v1.SystemOutput.LocalFile"> & {
  /**
   * @generated from field: string prompt = 8;
   */
  prompt: string;

  /**
   * Markdown
   *
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * @generated from field: string placeholder = 2;
   */
  placeholder: string;

  /**
   * Pre-filled the textbox
   *
   * @generated from field: string default_value = 9;
   */
  defaultValue: string;

  /**
   * @generated from field: string submit_button_label = 6;
   */
  submitButtonLabel: string;

  /**
   * icon name or image_url
   *
   * @generated from field: string submit_button_icon = 7;
   */
  submitButtonIcon: string;
};

/**
 * Describes the message sf.codegen.conversation.v1.SystemOutput.LocalFile.
 * Use `create(SystemOutput_LocalFileSchema)` to create a new message.
 */
export const SystemOutput_LocalFileSchema: GenMessage<SystemOutput_LocalFile> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 2, 4);

/**
 * @generated from message sf.codegen.conversation.v1.SystemOutput.Loading
 */
export type SystemOutput_Loading = Message<"sf.codegen.conversation.v1.SystemOutput.Loading"> & {
  /**
   * @generated from field: bool loading = 1;
   */
  loading: boolean;

  /**
   * other fields to format the loader and whatnot
   *
   * @generated from field: string label = 2;
   */
  label: string;
};

/**
 * Describes the message sf.codegen.conversation.v1.SystemOutput.Loading.
 * Use `create(SystemOutput_LoadingSchema)` to create a new message.
 */
export const SystemOutput_LoadingSchema: GenMessage<SystemOutput_Loading> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 2, 5);

/**
 * @generated from message sf.codegen.conversation.v1.SystemOutput.DownloadFiles
 */
export type SystemOutput_DownloadFiles = Message<"sf.codegen.conversation.v1.SystemOutput.DownloadFiles"> & {
  /**
   * @generated from field: repeated sf.codegen.conversation.v1.SystemOutput.DownloadFile files = 1;
   */
  files: SystemOutput_DownloadFile[];
};

/**
 * Describes the message sf.codegen.conversation.v1.SystemOutput.DownloadFiles.
 * Use `create(SystemOutput_DownloadFilesSchema)` to create a new message.
 */
export const SystemOutput_DownloadFilesSchema: GenMessage<SystemOutput_DownloadFiles> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 2, 6);

/**
 * @generated from message sf.codegen.conversation.v1.SystemOutput.DownloadFile
 */
export type SystemOutput_DownloadFile = Message<"sf.codegen.conversation.v1.SystemOutput.DownloadFile"> & {
  /**
   * @generated from field: string filename = 1;
   */
  filename: string;

  /**
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * @generated from field: bytes content = 3;
   */
  content: Uint8Array;

  /**
   * @generated from field: string description = 4;
   */
  description: string;
};

/**
 * Describes the message sf.codegen.conversation.v1.SystemOutput.DownloadFile.
 * Use `create(SystemOutput_DownloadFileSchema)` to create a new message.
 */
export const SystemOutput_DownloadFileSchema: GenMessage<SystemOutput_DownloadFile> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 2, 7);

/**
 * @generated from message sf.codegen.conversation.v1.SystemOutput.Confirm
 */
export type SystemOutput_Confirm = Message<"sf.codegen.conversation.v1.SystemOutput.Confirm"> & {
  /**
   * @generated from field: string prompt = 1;
   */
  prompt: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: string accept_button_label = 2;
   */
  acceptButtonLabel: string;

  /**
   * @generated from field: string decline_button_label = 3;
   */
  declineButtonLabel: string;

  /**
   * @generated from field: sf.codegen.conversation.v1.SystemOutput.Confirm.Button default_button = 5;
   */
  defaultButton: SystemOutput_Confirm_Button;
};

/**
 * Describes the message sf.codegen.conversation.v1.SystemOutput.Confirm.
 * Use `create(SystemOutput_ConfirmSchema)` to create a new message.
 */
export const SystemOutput_ConfirmSchema: GenMessage<SystemOutput_Confirm> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 2, 8);

/**
 * @generated from enum sf.codegen.conversation.v1.SystemOutput.Confirm.Button
 */
export enum SystemOutput_Confirm_Button {
  /**
   * @generated from enum value: UNSET = 0;
   */
  UNSET = 0,

  /**
   * @generated from enum value: CONFIRM = 1;
   */
  CONFIRM = 1,

  /**
   * @generated from enum value: DECLINE = 2;
   */
  DECLINE = 2,
}

/**
 * Describes the enum sf.codegen.conversation.v1.SystemOutput.Confirm.Button.
 */
export const SystemOutput_Confirm_ButtonSchema: GenEnum<SystemOutput_Confirm_Button> = /*@__PURE__*/
  enumDesc(file_sf_codegen_conversation_v1_conversation, 2, 8, 0);

/**
 * @generated from message sf.codegen.conversation.v1.DiscoveryRequest
 */
export type DiscoveryRequest = Message<"sf.codegen.conversation.v1.DiscoveryRequest"> & {
  /**
   * @generated from field: string search_terms = 1;
   */
  searchTerms: string;

  /**
   * Version sent to the codegen service, which is incremental (0,1,2...). 
   * It is used to force users to upgrade after breaking changes between the CLI and the codegen server.
   *
   * @generated from field: uint64 client_version = 2;
   */
  clientVersion: bigint;
};

/**
 * Describes the message sf.codegen.conversation.v1.DiscoveryRequest.
 * Use `create(DiscoveryRequestSchema)` to create a new message.
 */
export const DiscoveryRequestSchema: GenMessage<DiscoveryRequest> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 3);

/**
 * @generated from message sf.codegen.conversation.v1.DiscoveryResponse
 */
export type DiscoveryResponse = Message<"sf.codegen.conversation.v1.DiscoveryResponse"> & {
  /**
   * @generated from field: repeated sf.codegen.conversation.v1.DiscoveryResponse.Generator generators = 1;
   */
  generators: DiscoveryResponse_Generator[];
};

/**
 * Describes the message sf.codegen.conversation.v1.DiscoveryResponse.
 * Use `create(DiscoveryResponseSchema)` to create a new message.
 */
export const DiscoveryResponseSchema: GenMessage<DiscoveryResponse> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 4);

/**
 * @generated from message sf.codegen.conversation.v1.DiscoveryResponse.Generator
 */
export type DiscoveryResponse_Generator = Message<"sf.codegen.conversation.v1.DiscoveryResponse.Generator"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: string icon_url = 4;
   */
  iconUrl: string;

  /**
   * if not the same as this one
   *
   * @generated from field: string endpoint = 5;
   */
  endpoint: string;

  /**
   * @generated from field: string group = 6;
   */
  group: string;
};

/**
 * Describes the message sf.codegen.conversation.v1.DiscoveryResponse.Generator.
 * Use `create(DiscoveryResponse_GeneratorSchema)` to create a new message.
 */
export const DiscoveryResponse_GeneratorSchema: GenMessage<DiscoveryResponse_Generator> = /*@__PURE__*/
  messageDesc(file_sf_codegen_conversation_v1_conversation, 4, 0);

/**
 * @generated from service sf.codegen.conversation.v1.ConversationService
 */
export const ConversationService: GenService<{
  /**
   * @generated from rpc sf.codegen.conversation.v1.ConversationService.Converse
   */
  converse: {
    methodKind: "bidi_streaming";
    input: typeof UserInputSchema;
    output: typeof SystemOutputSchema;
  },
  /**
   * @generated from rpc sf.codegen.conversation.v1.ConversationService.Discover
   */
  discover: {
    methodKind: "unary";
    input: typeof DiscoveryRequestSchema;
    output: typeof DiscoveryResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_sf_codegen_conversation_v1_conversation, 0);

